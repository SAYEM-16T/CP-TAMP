ll n, m;
vector<ll> adj[N], vis(N, 0);

void dfs(ll u)
{
    vis[u] = 1;
    for (auto v : adj[u])
    {
        if (vis[v])
            continue;
        dfs(v);
    }
}

cin >> n >> m;
for (int i = 1; i < n; i++) // tree
{
    ll a , b;
    cin >> a >> b;
    adj[a].push_back(b);
    adj[b].push_back(a);
}

for (int i = 0; i < m; i++) // graph
{
    ll a , b;
    cin >> a >> b;
    adj[a].push_back(b);
    adj[b].push_back(a);
}
dfs(1); // for connnected component like tree
for (int i = 1; i <= n; i++) // for graph
{
    if (vis[i])
        continue;
    dfs(i);
}
